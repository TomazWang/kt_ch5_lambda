@file:Suppress("unused", "ConvertCallChainIntoSequence")

package com.tomaz.kt_ch5_lambda

import com.tomaz.kt_ch5_lambda.intro.model.Planet

/**
 * Created by TomazWang on 2019/03/22.
 *
 *
 * @author Tomaz Wang
 * @since 2019/03/22
 **/


//  ██╗  ██╗████████╗         ██╗      ██╗      █████╗ ███╗   ███╗██████╗ ██████╗  █████╗
//  ██║ ██╔╝╚══██╔══╝         ╚██╗     ██║     ██╔══██╗████╗ ████║██╔══██╗██╔══██╗██╔══██╗
//  █████╔╝    ██║       █████╗╚██╗    ██║     ███████║██╔████╔██║██████╔╝██║  ██║███████║
//  ██╔═██╗    ██║       ╚════╝██╔╝    ██║     ██╔══██║██║╚██╔╝██║██╔══██╗██║  ██║██╔══██║
//  ██║  ██╗   ██║            ██╔╝     ███████╗██║  ██║██║ ╚═╝ ██║██████╔╝██████╔╝██║  ██║
//  ╚═╝  ╚═╝   ╚═╝            ╚═╝      ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝╚═════╝ ╚═════╝ ╚═╝  ╚═╝


// Great resources
//
// - KotlinConf 2018 - Dissecting the stdlib by Huyen Tue Dao
// ---- 🔗 https://youtu.be/Fzt_9I733Yg
// ---- 🔗 https://github.com/queencodemonkey/dissecting-the-stdlib
//
// - KotlinConf 2017 - Two Stones, One Bird: Implementation Tradeoffs by Christina Lee
// ---- 🔗 https://youtu.be/YxOTU9F_YX4
//
// - Higher-Order Functions and Lambdas
// ---- 🔗 https://kotlinlang.org/docs/reference/lambdas.html

//
//
// ============================================================================================================
//
//


//
// 💡 今日目標
//
// - 學會什麼是 Lambda
// - 更了解 function ( extension function, higher order function, lambda with receiver)
// - 學會內建的好用 function
//


//
// 💡 使用教學
//
// - 看到 📄 -> 搜尋並切換到該檔案
// - 看到 🚀 -> 前往該檔案，並執行 main function
// - 看到 🏁 -> 切換並試著完成這個測試


/**
 * 找到適合人類居住的星球
 *
 * 假設我們今天要移民宇宙、有一個 function 可以快速找到適合的星球
 */

fun findEarthReplacements(planets: List<Planet?>): List<Pair<String, Planet>> =
    planets
        .filterNotNull()
        .filter { it.oxygen > 0.18 }
        .filter { it.water > 0.7 }
        .filter { it.temp < 80 && it.temp > -20 }
        .sortedByDescending { it.size }
        .map { it.name to it }

// 試試看
//
// 🚀 IntroTest#`test findEarthReplacements`


//
//
// ============================================================================================================
//
//

//
//   _______                       __                  __    __
//  |       \                     |  \                |  \  |  \
//  | $$$$$$$\  ______    _______  \$$  _______       | $$  | $$  _______   ______    ______    ______
//  | $$__/ $$ |      \  /       \|  \ /       \      | $$  | $$ /       \ |      \  /      \  /      \
//  | $$    $$  \$$$$$$\|  $$$$$$$| $$|  $$$$$$$      | $$  | $$|  $$$$$$$  \$$$$$$\|  $$$$$$\|  $$$$$$\
//  | $$$$$$$\ /      $$ \$$    \ | $$| $$            | $$  | $$ \$$    \  /      $$| $$  | $$| $$    $$
//  | $$__/ $$|  $$$$$$$ _\$$$$$$\| $$| $$_____       | $$__/ $$ _\$$$$$$\|  $$$$$$$| $$__| $$| $$$$$$$$
//  | $$    $$ \$$    $$|       $$| $$ \$$     \       \$$    $$|       $$ \$$    $$ \$$    $$ \$$     \
//   \$$$$$$$   \$$$$$$$ \$$$$$$$  \$$  \$$$$$$$        \$$$$$$  \$$$$$$$   \$$$$$$$ _\$$$$$$$  \$$$$$$$
//                                                                                  |  \__| $$
//                                                                                   \$$    $$
//                                                                                    \$$$$$$


// 基本的 function 宣告法
fun simpleFunction(arg: String) {
    print("Hello $arg")
}


// 會回傳資料的 function
fun funcWithReturnValue(x: Int): Int {
    val y = x + 1
    return y
}

// 簡化簡單 return
fun funcWithReturnValue2(x: Int) = x + 1


// 簡化成 lambda
val addOne = { x: Int -> x + 1 }


// function, lambda 可以被儲存、傳遞
fun isEven(n: Int) = n % 2 == 0

val isEvenLambda = { n: Int -> n % 2 == 0 }

fun verifyNumber(x: Int, verifyMethod: (Int) -> Boolean): Boolean {
//    return verifyMethod.invoke(x)
    return verifyMethod(x)
}



// 這種參數是 function 的 function ---> Higher order function


//
//
// ============================================================================================================
//
//


//
//   __    __  __            __                                   ______                   __
//  |  \  |  \|  \          |  \                                 /      \                 |  \
//  | $$  | $$ \$$  ______  | $$____    ______    ______        |  $$$$$$\  ______    ____| $$  ______    ______
//  | $$__| $$|  \ /      \ | $$    \  /      \  /      \       | $$  | $$ /      \  /      $$ /      \  /      \
//  | $$    $$| $$|  $$$$$$\| $$$$$$$\|  $$$$$$\|  $$$$$$\      | $$  | $$|  $$$$$$\|  $$$$$$$|  $$$$$$\|  $$$$$$\
//  | $$$$$$$$| $$| $$  | $$| $$  | $$| $$    $$| $$   \$$      | $$  | $$| $$   \$$| $$  | $$| $$    $$| $$   \$$
//  | $$  | $$| $$| $$__| $$| $$  | $$| $$$$$$$$| $$            | $$__/ $$| $$      | $$__| $$| $$$$$$$$| $$
//  | $$  | $$| $$ \$$    $$| $$  | $$ \$$     \| $$             \$$    $$| $$       \$$    $$ \$$     \| $$
//   \$$   \$$ \$$ _\$$$$$$$ \$$   \$$  \$$$$$$$ \$$              \$$$$$$  \$$        \$$$$$$$  \$$$$$$$ \$$
//                |  \__| $$
//                 \$$    $$
//                  \$$$$$$
//                        ________                                 __      __
//                       |        \                               |  \    |  \
//                       | $$$$$$$$__    __  _______    _______  _| $$_    \$$  ______   _______
//                       | $$__   |  \  |  \|       \  /       \|   $$ \  |  \ /      \ |       \
//                       | $$  \  | $$  | $$| $$$$$$$\|  $$$$$$$ \$$$$$$  | $$|  $$$$$$\| $$$$$$$\
//                       | $$$$$  | $$  | $$| $$  | $$| $$        | $$ __ | $$| $$  | $$| $$  | $$
//                       | $$     | $$__/ $$| $$  | $$| $$_____   | $$|  \| $$| $$__/ $$| $$  | $$
//                       | $$      \$$    $$| $$  | $$ \$$     \   \$$  $$| $$ \$$    $$| $$  | $$
//                        \$$       \$$$$$$  \$$   \$$  \$$$$$$$    \$$$$  \$$  \$$$$$$  \$$   \$$
//
//




